name: Main Build and Publish Dev Build
on:
  workflow_dispatch:  # Add this line to enable manual triggering
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    paths-ignore:
      - '**.md'
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# For now, just run all rules tests. Mostly as a proof-of-concept.
jobs:
  run-tests:
    runs-on: ubuntu-latest
    if: always() && !cancelled()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Setup Gradle and task/dependency caching
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Build Distribution for Linux
        run: ./gradlew jvmTest --info

  build-windows-desktop:
    runs-on: windows-latest
    needs: [ run-tests ]
    if: |
      always() && 
      !cancelled() && 
      !contains(needs.*.result, 'failure') && 
      !contains(needs.*.result, 'cancelled')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Setup Gradle and task/dependency caching
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Build Installer for Windows
        run: ./gradlew packageReleaseMsi -P"jervis.releaseType=dev"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-windows
          path: ./modules/jervis-ui/build/compose/binaries/main-release/msi/*
          if-no-files-found: error
          retention-days: 1

  build-macos-desktop:
    runs-on: macos-latest
    needs: [ run-tests ]
    if: |
      always() && 
      !cancelled() && 
      !contains(needs.*.result, 'failure') && 
      !contains(needs.*.result, 'cancelled')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Setup Gradle and task/dependency caching
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Build Installer for MacOS
        run: ./gradlew packageReleaseDmg -Pjervis.releaseType=dev

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-macos
          path: ./modules/jervis-ui/build/compose/binaries/main-release/dmg/*
          if-no-files-found: error
          retention-days: 1

  build-linux-desktop:
    runs-on: ubuntu-latest
    needs: [ run-tests ]
    if: |
      always() && 
      !cancelled() && 
      !contains(needs.*.result, 'failure') && 
      !contains(needs.*.result, 'cancelled')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Setup Gradle and task/dependency caching
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Build Installer for Linux
        run: ./gradlew packageReleaseDeb -Pjervis.releaseType=dev

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-linux
          path: ./modules/jervis-ui/build/compose/binaries/main-release/deb/*
          if-no-files-found: error
          retention-days: 1

  build-wasm:
    runs-on: ubuntu-latest
    needs: [ run-tests ]
    if: |
      always() && 
      !cancelled() && 
      !contains(needs.*.result, 'failure') && 
      !contains(needs.*.result, 'cancelled')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Setup Gradle and task/dependency caching
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Build Package for Wasm
        run: ./gradlew wasmJsBrowserDistribution -Pjervis.releaseType=dev

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-browser
          path: ./modules/jervis-ui/build/dist/wasmJs/productionExecutable/*
          if-no-files-found: error
          retention-days: 1

  upload-dev-version:
    runs-on: ubuntu-latest
    needs: [ build-linux-desktop, build-macos-desktop, build-windows-desktop, build-wasm ]
    if: |
      always() && 
      !cancelled() && 
      !contains(needs.*.result, 'failure') && 
      !contains(needs.*.result, 'cancelled')

    steps:
      - name: Restore release packages - Wasm
        uses: actions/download-artifact@v4
        with:
          name: app-browser
          path: ./dist/wasm

      - name: Restore release packages - MacOS
        uses: actions/download-artifact@v4
        with:
          name: app-macos
          path: ./dist/macos

      - name: Restore release packages - Windows
        uses: actions/download-artifact@v4
        with:
          name: app-windows
          path: ./dist/windows

      - name: Restore release packages - Linux
        uses: actions/download-artifact@v4
        with:
          name: app-linux
          path: ./dist/linux

      - name: Prepare upload
        run: |
          cd ./dist
          mkdir download
          mv ./macos/* ./download
          mv ./linux/* ./download
          mv ./windows/* ./download
          zip -r ./download/wasm.zip ./wasm/*
          mv ./wasm/* ./
          rm -rf macos
          rm -rf linux
          rm -rf windows
          rm -rf wasm
          zip -r ../devbuilds.zip .
          

      - name: Upload package
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_KEY_PASSWORD }}
          source: "./devbuilds.zip"
          target: ./jervis_upload
          strip_components: 1

      - name: Prepare dev version on server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_KEY_PASSWORD }}
          script_stop: true
          script: |
            rm -rf ./jervis_new
            unzip ./jervis_upload/devbuilds.zip -d ./jervis_new
            cp ./jervis/.htaccess ./jervis_new
            mv ./jervis ./jervis_old
            mv ./jervis_new ./jervis
            rm -rf ./jervis_old
            rm ./jervis_upload/devbuilds.zip
