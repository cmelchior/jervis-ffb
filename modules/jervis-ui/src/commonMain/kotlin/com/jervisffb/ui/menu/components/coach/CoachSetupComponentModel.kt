package com.jervisffb.ui.menu.components.coach

import com.jervisffb.engine.model.CoachType
import com.jervisffb.ui.game.viewmodel.MenuViewModel
import com.jervisffb.ui.menu.JervisScreenModel
import kotlinx.coroutines.flow.MutableStateFlow

data class AiPlayer(
    val name: String,
)

/**
 * View controller for the "Coach" and "AI" sections of setting up both Hotseat and
 * P2P Games.
 *
 * @see [CoachSetupComponent]
 */
class CoachSetupComponentModel(
    private val menuViewModel: MenuViewModel,
    private val defaultCoachName: String? = null,
    private val onCoachNameChange: (String) -> Unit = {},
) : JervisScreenModel {

    private val autogeneratedCoachNames = listOf(
        "Brannigan",
        "Dreadscar",
        "Gorefang",
        "Gorgal",
        "Grimwald",
        "Hakkar",
        "Helmut",
        "Kragg",
        "Krunk",
        "Ludwig",
        "Morguk",
        "Mungus",
        "Riktor",
        "Rotgut",
        "Skarn",
        "Slade",
        "Snotfang",
        "Tomolandry",
        "Thundrik",
        "Uzgul",
        "Vorrik",
        "Zugmaw",
    )
    val coachName = MutableStateFlow(if (defaultCoachName?.isNotBlank() == true) defaultCoachName else autogeneratedCoachNames.random())

    private val availableAiPlayers = listOf(
        AiPlayer("Random"),
    )
    val coachType = MutableStateFlow(CoachType.HUMAN)
    val selectedAiPlayer = MutableStateFlow<AiPlayer?>(availableAiPlayers.random())
    val aiPlayers = MutableStateFlow(availableAiPlayers)

    fun updateCoachName(name: String) {
        coachName.value = name
        onCoachNameChange(name)
    }

    fun updatePlayerType(type: CoachType) {
        coachType.value = type
    }

    fun updateSelectedAiPlayer(player: AiPlayer?) {
        selectedAiPlayer.value = player
    }
}
