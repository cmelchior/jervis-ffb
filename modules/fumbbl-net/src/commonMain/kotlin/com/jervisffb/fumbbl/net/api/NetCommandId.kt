package com.jervisffb.fumbbl.net.api

import com.jervisffb.fumbbl.net.api.serialization.FumbblEnum
import com.jervisffb.fumbbl.net.api.serialization.FumbblEnumSerializer
import kotlinx.serialization.Serializable

class NetCommandIdSerializer : FumbblEnumSerializer<NetCommandId>(NetCommandId::class)

@Serializable(with = NetCommandIdSerializer::class)
enum class NetCommandId(override val id: String) : FumbblEnum {
    CLIENT_ACTING_PLAYER("clientActingPlayer"),
    CLIENT_APOTHECARY_CHOICE("clientApothecaryChoice"),
    CLIENT_ARGUE_THE_CALL("clientArgueTheCall"),
    CLIENT_BLITZ_MOVE("clientBlitzMove"),
    CLIENT_BLITZ_TARGET_SELECTED("blitzTargetSelected"),
    CLIENT_BLOCK("clientBlock"),
    CLIENT_BLOCK_CHOICE("clientBlockChoice"),
    CLIENT_BLOCK_OR_RE_ROLL_CHOICE_FOR_TARGET("clientBlockOrReRollChoiceForTarget"),
    CLIENT_BUY_CARD("clientBuyCard"),
    CLIENT_BUY_INDUCEMENTS("clientBuyInducements"),
    CLIENT_CLOSE_SESSION("clientCloseSession"),
    CLIENT_COIN_CHOICE("clientCoinChoice"),
    CLIENT_CONCEDE_GAME("clientConcedeGame"),
    CLIENT_CONFIRM("clientConfirm"),
    CLIENT_DEBUG_CLIENT_STATE("clientDebugClientState"),
    CLIENT_END_TURN("clientEndTurn"),
    CLIENT_FIELD_COORDINATE("clientFieldCoordinate"),
    CLIENT_FOLLOWUP_CHOICE("clientFollowupChoice"),
    CLIENT_FOUL("clientFoul"),
    CLIENT_GAZE("clientGaze"),
    CLIENT_HAND_OVER("clientHandOver"),
    CLIENT_ILLEGAL_PROCEDURE("clientIllegalProcedure"),
    CLIENT_INTERCEPTOR_CHOICE("clientInterceptorChoice"),
    CLIENT_JOIN("clientJoin"),
    CLIENT_JOURNEYMEN("clientJourneymen"),
    CLIENT_KICKOFF("clientKickoff"),
    CLIENT_KICK_TEAM_MATE("clientKickTeamMate"),
    CLIENT_MOVE("clientMove"),
    CLIENT_PASS("clientPass"),
    CLIENT_PASSWORD_CHALLENGE("clientPasswordChallenge"),
    CLIENT_PETTY_CASH("clientPettyCash"),
    CLIENT_PILE_DRIVER("clientPileDriver"),
    CLIENT_PING("clientPing"),
    CLIENT_PLAYER_CHOICE("clientPlayerChoice"),
    CLIENT_PRAYER_SELECTION("clientPrayerSelection"),
    CLIENT_PUSHBACK("clientPushback"),
    CLIENT_RECEIVE_CHOICE("clientReceiveChoice"),
    CLIENT_REPLAY("clientReplay"),
    CLIENT_REQUEST_VERSION("clientRequestVersion"),
    CLIENT_SELECT_CARD_TO_BUY("clientSelectCardToBuy"),
    CLIENT_SELECT_WEATHER("clientSelectWeather"),
    CLIENT_SETUP_PLAYER("clientSetupPlayer"),
    CLIENT_SET_BLOCK_TARGET_SELECTION("clientSetBlockTargetSelection"),
    CLIENT_SET_MARKER("clientSetMarker"),
    CLIENT_START_GAME("clientStartGame"),
    CLIENT_SWOOP("clientSwoop"),
    CLIENT_SYNCHRONOUS_MULTI_BLOCK("clientSynchronousMultiBlock"),
    CLIENT_TALK("clientTalk"),
    CLIENT_TARGET_SELECTED("targetSelected"),
    CLIENT_TEAM_SETUP_DELETE("clientTeamSetupDelete"),
    CLIENT_TEAM_SETUP_LOAD("clientTeamSetupLoad"),
    CLIENT_TEAM_SETUP_SAVE("clientTeamSetupSave"),
    CLIENT_THROW_KEG("clientThrowKeg"),
    CLIENT_THROW_TEAM_MATE("clientThrowTeamMate"),
    CLIENT_TOUCHBACK("clientTouchback"),
    CLIENT_UNSET_BLOCK_TARGET_SELECTION("clientUnsetBlockTargetSelection"),
    CLIENT_UPDATE_PLAYER_MARKINGS("clientUpdatePlayerMarkings"),
    CLIENT_USER_SETTINGS("clientUserSettings"),
    CLIENT_USE_APOTHECARIES("clientUseApothecaries"),
    CLIENT_USE_APOTHECARY("clientUseApothecary"),
    CLIENT_USE_BRAWLER("clientUseBrawler"),
    CLIENT_USE_CHAINSAW("clientUseChainsaw"),
    CLIENT_USE_CONSUMMATE_RE_ROLL_FOR_BLOCK("clientUseConsummateReRollForBlock"),
    CLIENT_USE_FUMBLEROOSKIE("clientUseFumblerooskie"),
    CLIENT_USE_IGORS("clientUseIgors"),
    CLIENT_USE_INDUCEMENT("clientUseInducement"),
    CLIENT_USE_PRO_RE_ROLL_FOR_BLOCK("clientUseProReRollForBlock"),
    CLIENT_USE_RE_ROLL("clientUseReRoll"),
    CLIENT_USE_RE_ROLL_FOR_TARGET("clientUseReRollForTarget"),
    CLIENT_USE_SKILL("clientUseSkill"),
    CLIENT_USE_TEAM_MATES_WISDOM("clientUseTeamMatesWisdom"),
    CLIENT_WIZARD_SPELL("clientWizardSpell"),
    INTERNAL_APPLY_AUTOMATIC_PLAYER_MARKINGS("internalApplyAutomaticPlayerMarkings"),
    INTERNAL_SERVER_ADD_LOADED_TEAM("internalServerAddLoadedTeam"),
    INTERNAL_SERVER_CLEAR_CACHE("internalServerClearCache"),
    INTERNAL_SERVER_CLOSE_GAME("internalServerCloseGame"),
    INTERNAL_SERVER_DELETE_GAME("internalServerDeleteGame"),
    INTERNAL_SERVER_FUMBBL_GAME_CHECKED("internalServerFumbblGameChecked"),
    INTERNAL_SERVER_FUMBBL_GAME_CREATED("internalServerFumbblGameCreated"),
    INTERNAL_SERVER_FUMBBL_TEAM_LOADED("internalServerFumbblTeamLoaded"),
    INTERNAL_SERVER_JOIN_APPROVED("internalServerJoinApproved"),
    INTERNAL_SERVER_REPLAY_LOADED("internalServerReplayGameLoaded"),
    INTERNAL_SERVER_SCHEDULE_GAME("internalServerScheduleGame"),
    INTERNAL_SERVER_SOCKET_CLOSED("internalServerSocketClosed"),
    INTERNAL_SERVER_UPLOAD_GAME("internalServerUploadGame"),
    SERVER_ADD_PLAYER("serverAddPlayer"),
    SERVER_ADMIN_MESSAGE("serverAdminMessage"),
    SERVER_GAME_LIST("serverGameList"),
    SERVER_GAME_STATE("serverGameState"),
    SERVER_GAME_TIME("serverGameTime"),
    SERVER_JOIN("serverJoin"),
    SERVER_LEAVE("serverLeave"),
    SERVER_MODEL_SYNC("serverModelSync"),
    SERVER_PASSWORD_CHALLENGE("serverPasswordChallenge"),
    SERVER_PONG("serverPong"),
    SERVER_REMOVE_PLAYER("serverRemovePlayer"),
    SERVER_REPLAY("serverReplay"),
    SERVER_SOUND("serverSound"),
    SERVER_STATUS("serverStatus"),
    SERVER_TALK("serverTalk"),
    SERVER_TEAM_LIST("serverTeamList"),
    SERVER_TEAM_SETUP_LIST("serverTeamSetupList"),
    SERVER_UNZAP_PLAYER("serverUnzapPlayer"),
    SERVER_UPDATE_LOCAL_PLAYER_MARKERS("serverUpdateLocalPlayerMarkers"),
    SERVER_USER_SETTINGS("serverUserSettings"),
    SERVER_VERSION("serverVersion"),
    SERVER_ZAP_PLAYER("serverZapPlayer"),
    ;

    fun fromCommandId(id: String) {
        values().firstOrNull { this.id == id } ?: throw IllegalArgumentException("Unrecognized command: $id")
    }
}
